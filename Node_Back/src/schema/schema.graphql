scalar Date

directive @rateLimit(
	message: String
	identityArgs: [String]
	arrayLengthField: String
	max: Int
	window: String
) on FIELD_DEFINITION

enum puestoUsuario {
	Admin
	Supervisor
	Operador
}

"Objetos"
type Tanque {
	"Identificador del Tanque"
	idTanque: String!
	"Calidad del Tanque"
	calidad: String
	"Comentario del estado de la valvula"
	estadoValvula: String
	"Peso Actual del tanque"
	pesoActual: Float
	"Peso normal del tanque"
	peso: Float
	"Fecha esperada para el regreso del tanque"
	fechaEsperadaRetorno: Date
	"ID de la etiqueta asignada al tanque"
	idEtiqueta: EtiquetaRFID
	"Información del dueno"
	dueno: Owner
	"Contenido actual del tanque"
	contenidoTanque: Contenido
	"Lugar del tanque"
	lugar: Lugar
	"Historial del tanque"
	haEstado: [HistorialTanque]
	"operaciones"
	operaciones: [Operacion]
	"mantenimientos"
	mantenimientos: [Mantenimiento]
	"Observaciones"
	observaciones: String
	"Fecha de llegada"
	fechaIngreso: Date
}
type Owner {
	idDueno: String!
	nombre: String!
	numTanques: Int
}
type Mantenimiento {
	tanque: Tanque!
	fechaMantenimiento: Date
	observaciones: String
}

type EtiquetaRFID {
	idEtiqueta: String!
}

type Contenido {
	idContenido: String!
	contenido: String!
	tanques: [Tanque]
	numTanques: Int
}
"Lugar de donde se pueden ubicar los tanques"
type Lugar {
	"Identificador del Lugar"
	idLugar: String!
	"Nombre del lugar"
	lnombre: String!
	"Radio del lugar"
	radio: Float
	"Capacidad maxima de ese lugar para guardar tanques"
	capacidadMaxima: Int
	"Coordenas del lugar, se descomponen en x y y"
	coordenadas: Point
	"Tanques en un lugar"
	tanques: [Tanque]
	"Fecha"
	fecha: Date
}
"Coordenadas"
type Point {
	x: Float
	y: Float
}

type Usuario {
	idUsuario: String
	nombre: String
	apellidos: String
	password: String
	correo: String
	idSupervisor: String
	puesto: puestoUsuario
}

type Operacion {
	operador: Usuario
	tanque: Tanque
	fecha: Date
}
"Historial de ubicación de tanques"
type HistorialTanque {
	lugar: Lugar
	fecha: Date
	idTanque: ID
}

type OutputLogin {
	refreshJWT: String!
	jwt_token: String!
	jwt_fechaExpiracion: Date!
}

"Historial de peso de tanques"
type HistorialPeso {
	peso: Float
	fecha: Date
	idTanque: ID
}

"Input para crear o actualizar tanque"
input TanqueInput {
	id: String
	calidad: String
	estadoValvula: String
	pesoActual: Float
	peso: Float
	fechaEsperadaRetorno: Date
	idEtiqueta: Int
	idContenido: String
	idDueno: String
	fechaIngreso: Date
	observaciones: String
}

"Input para crear o actualizar un lugar"
input LugarInput {
	id: String
	lnombre: String
	radio: Float
	capacidadMaxima: Int
	coordenadas: PointInput
}

"Input para crear o modificar las coordenadas de un lugar"
input PointInput {
	x: Float
	y: Float
}

"Input para crear o actualizar un contenido"
input ContenidoInput {
	id: String
	contenido: String
}

"Input para crear o actualizar un dueno"
input DuenoInput {
	id: String
	nombre: String
}

"Input para crear o actualizar un mantenimiento"
input MantenimientoInput {
	id: IdMantenimientoInput
	observaciones: String
}

"Id para un mantenimiento"
input IdMantenimientoInput {
	idTanque: String
	fechaMantenimiento: Date
}

"Input para crear o actualizar una etiqueta RFID"
input EtiquetaInput {
	id: Int
}

"Input para crear o actualizar el historial del peso de un tanque"
input HistorialPesoInput {
	id: IdHistorialPeso
	peso: Float
}

"Id para el historial de un peso"
input IdHistorialPeso {
	idTanque: String
	fecha: Date
}

"Input para crear o actualizar operaciones de un tanque"
input OperadoPorInput {
	id: IdOperadoPorInput
	idUsuario: String
}

"Id para una operación"
input IdOperadoPorInput {
	idTanque: String
	fecha: Date
}

"Input para la ubicación de un tanque"
input TanqueEstaInput {
	id: String
	idLugar: String
	fecha: Date
}

"Input para el historial de ubicaciones de un tanque"
input TanqueHaEstadoInput {
	id: IdTanqueHaEstado
}

"Id para el historial de ubicaciones de un tanque"
input IdTanqueHaEstado {
	idTanque: String
	idLugar: String
	fecha: Date
}

"Id de un usuario"
input createUsuarioInput {
	id: String
	fName: String
	lName: String
	contrasena: String
	correo: String
	idSupervisor: String
	puesto: puestoUsuario
}

input setUsuarioInput {
	id: String
	fName: String
	lName: String
	correo: String
	idSupervisor: String
	puesto: puestoUsuario
}

input ContrasenaInput {
	correo: String!
	contraAnterior: String!
	nuevaContra: String!
}

"Queries"
type Query {
	"Lista de informacion de los Tanques"
	# Limited to 10 requests every 60 seconds
	tanques: [Tanque]
		@rateLimit(
			window: "60s"
			max: 10
			message: "You are doing that too often. Please wait 60 seconds before trying again."
		)
	"Información del tanque seleccionado por id"
	tanque(idTanque: ID!): Tanque!
	"Información de los lugares registrados"
	lugares: [Lugar]
	"Información de un lugar seleccionado por id"
	lugar(idLugar: ID!): Lugar!
	"Lista de información de usuarios"
	usuarios(puesto: puestoUsuario): [Usuario!]
	"Informacion de un usuario seleccionado por id"
	usuario(idUsuario: ID!): Usuario!
	"Lista de información de contenido"
	contenidos: [Contenido!]
	"Información de un contenido por id"
	contenido(idContenido: ID!): Contenido!
	"Lista de dueños"
	owners: [Owner!]
	"Información de un dueño por id"
	owner(idOwner: ID!): Owner
	"Lista de etiquetas RFID"
	etiquetas: [EtiquetaRFID]
	"Información de una etiqueta por ID"
	etiqueta(idEtiqueta: ID!): EtiquetaRFID
	"Lista de historial de peso"
	historialPesoTanques: [HistorialPeso!]
	"Información de peso de tanques"
	historialPesoTanque(idTanque: ID!): [HistorialPeso!]
	"Informacion de los mantenimientos de tanques"
	historialMantenimientos: [Mantenimiento!]
	"Información del mantenimiento de un tanque"
	historialMantenimientoTanque(idTanque: ID!): [Mantenimiento!]
	"Operaciones tanques"
	operaciones: [Operacion!]
	"Operacion de un tanque"
	operacionesTanque(idTanque: ID!): [Operacion!]
	"Lugares donde ha estado en diferentes tanques"
	tanquesHaEstadoEnFecha(desde: Date, hasta: Date): [HistorialTanque]
}

"""
set: toma como input las modificaciones que se quieren asignar a la instancia indicada por el id del input
create: toma como input la instancia que se quiere crear en una tabla de la base de datos
"""
type Mutation {
	setTanque(tanqueInput: TanqueInput!, idTanqueOriginal: String!): String
	createTanque(tanqueInput: TanqueInput!): String
	deleteTanque(idTanqueInput: String!): String

	setLugar(lugarInput: LugarInput!, idLugarOriginal: String!): String
	createLugar(lugarInput: LugarInput!): String

	setContenido(contenidoInput: ContenidoInput!, idContenidoOriginal: String!): String
	createContenido(contenidoInput: ContenidoInput!): String

	setDueno(duenoInput: DuenoInput!, idDuenoOriginal: String!): String
	createDueno(duenoInput: DuenoInput!): String

	setMantenimiento(
		mantenimientoInput: MantenimientoInput!
		idMantenimientoOriginal: IdMantenimientoInput!
	): String
	createMantenimiento(mantenimientoInput: MantenimientoInput!): String

	setEtiqueta(etiquetaInput: EtiquetaInput!, idEtiquetaOriginal: Int!): String
	createEtiqueta(etiquetaInput: EtiquetaInput!): String

	setHistorialPeso(
		historialPesoInput: HistorialPesoInput!
		idHistorialPesoOriginal: IdHistorialPeso!
	): String
	createHistorialPeso(historialPesoInput: HistorialPesoInput!): String

	setOperadoPor(
		operadoPorInput: OperadoPorInput!
		idOperadoPorOriginal: IdOperadoPorInput!
	): String
	createOperadoPor(operadoPorInput: OperadoPorInput!): String

	setTanqueEsta(tanqueEstaInput: TanqueEstaInput!, idTanqueEstaOriginal: String!): String
	createTanqueEsta(tanqueEstaInput: TanqueEstaInput): String

	setTanqueHaEstado(
		tanqueHaEstadoInput: TanqueHaEstadoInput!
		idTanqueHaEstadoOriginal: IdTanqueHaEstado!
	): String
	createTanqueHaEstado(tanqueHaEstadoInput: TanqueHaEstadoInput!): String

	setUsuario(usuarioInput: setUsuarioInput!, idUsuarioOriginal: String!): String
	createUsuario(usuarioInput: createUsuarioInput!): String
	cambiarContrasena(contrasenaInput: ContrasenaInput!): String!
	login(correo: String!, contrasena: String!): OutputLogin!
	refresh(refreshJWT: String!): String!
	logout(idUsuario: String!): String!
}
